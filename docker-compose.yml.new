version: '3.8'

services:
  app:
    build: 
      context: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - USE_DATABASE=true
      - DATABASE_URL=postgres://postgres:password@db:5432/stokdb
      - PGUSER=postgres
      - PGPASSWORD=password
      - PGDATABASE=stokdb
      - PGHOST=db
      - PGPORT=5432
      - SESSION_SECRET=${SESSION_SECRET:-your_secret_key_here}
      - DB_INIT_RETRY_ATTEMPTS=10
      - DB_INIT_RETRY_DELAY=5
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure:5
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - server-network
    # docker-entrypoint.sh dosyasını kullanıyoruz, burada entrypoint tanımlamıyoruz

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=stokdb
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    networks:
      - server-network

networks:
  server-network:
    driver: bridge
